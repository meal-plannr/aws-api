# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run:
          name: Run tests and package jar
          command: mvn clean package

      - run:
          name: Install Node and NPM
          command: |
            curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
            sudo apt-get install -y nodejs
            sudo npm install npm --global

      - run:
          name: Install Serverless
          command: |
            sudo npm i -g serverless
            npm install
      - run:
          name: Serverless package
          command: sls package

      - persist_to_workspace:
          root: ~/repo
          paths:
            - target/aws-api-dev.jar
            - .serverless

  dev-deploy:
    docker:
      - image: circleci/10.8.0-jessie-browsers

    working_directory: ~/meal-plannr

    steps:
      - run:
          name: Install Serverless
          command: |
            sudo npm i -g serverless
            npm install

      - attach_workspace:
          at: ~/repo

      - run:
          name: Deploy to dev
          command: sls deploy --package /tmp/workspace/.serverless

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - dev-deploy:
          requires:
            - build
